name: Update News RSS Feeds

on:
  schedule:
    - cron: '0 * * * *' # تشغيل كل ساعة (يمكن تعديل هذا الجدول)
  workflow_dispatch: # يسمح بتشغيل يدوي من واجهة GitHub

jobs:
  update-feeds:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # هذا ضروري لجلب السجل بالكامل لعملية pull
        token: ${{ secrets.GITHUB_TOKEN }} # استخدام توكن الافتراضي للوصول

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install feedparser

    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    # خطوة تشغيل السكربت لجلب الأخبار وتحديث ملف JSON
    - name: Run script to fetch and save news
      run: |
        python your_script_name.py # تأكد من استبدال 'your_script_name.py' بالاسم الفعلي لملف البايثون الخاص بك

    - name: Commit and push changes with retry
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # أضف ملف JSON الذي تم تحديثه
        git add articles.json

        # التحقق مما إذا كانت هناك تغييرات حقيقية قبل محاولة الالتزام والدفع
        if git diff --staged --quiet --exit-code; then
          echo "No changes to commit. Skipping commit and push."
        else
          MAX_RETRIES=5 # أقصى عدد للمحاولات
          RETRY_COUNT=0
          while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
            echo "Attempt $((RETRY_COUNT + 1)) to commit and push..."
            # حاول الالتزام. إذا فشل لأي سبب غير التعارض، سيتم التقاطه هنا.
            git commit -m "Update news articles [skip ci]"

            # حاول الدفع
            if git push origin main; then
              echo "Push successful!"
              break # الخروج من الحلقة إذا نجح الدفع
            else
              echo "Push failed. Pulling latest changes and retrying..."
              git pull --rebase origin main # اسحب أحدث التغييرات وأعد تطبيق التزامك فوقها
              RETRY_COUNT=$((RETRY_COUNT + 1))
              sleep 5 # انتظر قليلاً قبل المحاولة التالية لتجنب سباق شرطي فوري
            fi
          done

          if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
            echo "Failed to commit and push after $MAX_RETRIES attempts."
            exit 1 # فشل سير العمل إذا لم ينجح بعد عدة محاولات
          fi
        fi
