name: Update News RSS Feeds

on:
  schedule:
    - cron: '0 * * * *' # تشغيل كل ساعة (يمكن تعديل هذا الجدول)
  workflow_dispatch: # يسمح بتشغيل يدوي من واجهة GitHub

jobs:
  update-feeds:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # هذا ضروري لجلب السجل بالكامل لعملية pull/rebase
        token: ${{ secrets.GITHUB_TOKEN }} # استخدام توكن الافتراضي للوصول

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install feedparser

    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    # الخطوة الأولى: تشغيل السكربت لجلب الأخبار وتحديث ملف JSON المحلي
    # هذا يضمن أن 'articles.json' المحلي هو النسخة التي نريد دفعها
    - name: Run the RSS to JSON script
      run: |
        python rss_to_json.py # تأكد من أن هذا هو الاسم الصحيح لملف البايثون الخاص بك

    # الخطوة الثانية: الالتزام والدفع مع استراتيجية إعادة المحاولة
    # هنا نتعامل مع أي تحديثات تحدث في المستودع البعيد بعد تشغيل السكربت الخاص بنا
    - name: Commit and push changes with retry
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # أضف الملف الذي تم تحديثه إلى منطقة التجهيز
        git add articles.json

        # التحقق مما إذا كانت هناك تغييرات حقيقية لالتزامها
        # 'git diff --staged --quiet --exit-code' سيعود برمز خروج 0 إذا لم تكن هناك تغييرات
        if git diff --staged --quiet --exit-code; then
          echo "No changes in articles.json to commit. Skipping commit and push."
        else
          MAX_RETRIES=5
          RETRY_COUNT=0
          while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
            echo "Attempt $((RETRY_COUNT + 1)) to commit and push..."

            # محاولة الالتزام بالتغييرات المحلية
            # إذا فشل الالتزام (نادراً ما يحدث هنا إلا في مشاكل غير متوقعة)
            git commit -m "Update news articles [skip ci]"

            # محاولة الدفع. إذا نجحت، اخرج.
            if git push origin main; then
              echo "Push successful!"
              break
            else
              echo "Push failed. Pulling latest changes and retrying..."
              # اسحب أحدث التغييرات من الفرع الرئيسي عن بُعد وأعد تطبيق التزاماتك فوقها
              # هذا يحل مشكلة non-fast-forward
              git pull --rebase origin main
              RETRY_COUNT=$((RETRY_COUNT + 1))
              sleep 5 # انتظر قليلاً قبل المحاولة التالية
            fi
          done

          if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
            echo "Failed to commit and push after $MAX_RETRIES attempts."
            exit 1 # فشل سير العمل إذا لم ينجح بعد عدة محاولات
          fi
        fi
